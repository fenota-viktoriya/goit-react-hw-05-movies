{"version":3,"file":"static/js/387.42490211.chunk.js","mappings":"0PAEaA,EAAaC,EAAAA,EAAAA,GAAH,0EAMVC,EAASD,EAAAA,EAAAA,GAAH,8EAMNE,EAAOF,EAAAA,EAAAA,GAAH,yFAMJG,EAAOH,EAAAA,EAAAA,EAAH,wF,SCfJI,EAAU,WACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC5BN,EAAUM,QAEX,CAACL,KAGF,UAACT,EAAD,WACqB,IAAlBO,EAAOQ,SAAgB,uCACvBR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAACjB,EAAD,YACE,UAACC,EAAD,sBAAec,MACf,qCACA,SAACb,EAAD,UAAOc,MAHIC,W,oNCRd,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEeC,IAAAA,IAAA,yBAFf,cAEGC,EAFH,yBAGIA,EAAIC,KAAKT,SAHb,gCAKHU,EAAAA,GAAAA,MAAY,aALT,gFAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEeL,IAAAA,IAAA,gCAAmCK,IAFlD,cAEGJ,EAFH,yBAIIA,EAAIC,KAAKT,SAJb,gCAMHU,EAAAA,GAAAA,MAAY,aANT,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BR,GAA7B,gGAEeE,IAAAA,IAAA,mBAAsBF,IAFrC,cAEGG,EAFH,yBAGIA,EAAIC,MAHR,gCAKHC,EAAAA,GAAAA,MAAY,aALT,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEeR,IAAAA,IAAA,kBAAqBQ,EAArB,aAFf,cAEGP,EAFH,yBAIIA,EAAIC,MAJR,gCAMHC,EAAAA,GAAAA,MAAY,aANT,gFAUA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BiB,GAA5B,gGAEeR,IAAAA,IAAA,kBAAqBQ,EAArB,aAFf,cAEGP,EAFH,yBAIIA,EAAIC,MAJR,gCAMHO,QAAQC,MAAR,MANG,gFA5CPV,IAAAA,SAAAA,QAAAA,gBACE,kDACFA,IAAAA,SAAAA,QAAyB,6BAEzBA,IAAAA,SAAAA,OAAwB,CACtBW,QAAS","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Review = styled.li`\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Name = styled.h3`\n  margin-bottom: 10px;\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  font-style: italic;\n`;\n","import { useEffect, useState } from 'react';\nimport { ReviewsMovie } from 'service/Api';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList, Review, Name, Text } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    ReviewsMovie(movieId).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {movies.length === 0 && <h1>no reviews</h1>}\n      {movies.map(({ author, content, id }) => (\n        <Review key={id}>\n          <Name>Author: {author}</Name>\n          <h3>Review:</h3>\n          <Text>{content}</Text>\n        </Review>\n      ))}\n    </ReviewList>\n  );\n};\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\naxios.defaults.headers['Content-Type'] =\n  'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\naxios.defaults.params = {\n  api_key: '079f315d1c0a92bbce195275b13a313a',\n};\n\nexport async function TreandingMovies() {\n  try {\n    const res = await axios.get(`/3/trending/movie/day`);\n    return res.data.results;\n  } catch (error) {\n    toast.error('Not Found');\n  }\n}\nexport async function SearchMovie(query) {\n  try {\n    const res = await axios.get(`/3/search/movie?query=${query}`);\n\n    return res.data.results;\n  } catch (error) {\n    toast.error('Not Found');\n  }\n}\nexport async function DetailsMovies(id) {\n  try {\n    const res = await axios.get(`/3/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    toast.error('Not Found');\n  }\n}\n\nexport async function CreditsMovie(movie_id) {\n  try {\n    const res = await axios.get(`3/movie/${movie_id}/credits`);\n\n    return res.data;\n  } catch (error) {\n    toast.error('Not Found');\n  }\n}\n\nexport async function ReviewsMovie(movie_id) {\n  try {\n    const res = await axios.get(`3/movie/${movie_id}/reviews`);\n\n    return res.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["ReviewList","styled","Review","Name","Text","Reviews","useState","movies","setMovies","movieId","useParams","useEffect","ReviewsMovie","then","results","length","map","author","content","id","TreandingMovies","axios","res","data","toast","SearchMovie","query","DetailsMovies","CreditsMovie","movie_id","console","error","api_key"],"sourceRoot":""}