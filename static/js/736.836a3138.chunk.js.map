{"version":3,"file":"static/js/736.836a3138.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,EAAAA,GAAH,4EAMJC,EAAOD,EAAAA,EAAAA,GAAH,qTAaJE,EAAQF,EAAAA,EAAAA,EAAH,uGAMLG,EAAQH,EAAAA,EAAAA,IAAH,gDAILI,EAAOJ,EAAAA,EAAAA,EAAH,wF,SC1BJK,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA2BF,EAAAA,EAAAA,WAAS,GAApC,eAAOG,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAC,GACCA,EAAKC,MACVP,EAAUM,EAAKC,SAEhBC,OAAM,kBAAMN,GAAS,QACvB,CAACN,KAGF,UAACP,EAAD,WACGY,IAAU,uCACQ,IAAlBF,EAAOU,SAAgB,oCACvBV,EAAOW,KACN,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,GAAlC,QACIH,IACA,UAACpB,EAAD,YACE,SAACE,EAAD,CACEsB,IAAG,yCAAoCJ,GACvCK,IAAKH,KAEP,SAACrB,EAAD,qBACA,SAACE,EAAD,UAAOmB,KACP,SAACrB,EAAD,2BACA,UAACE,EAAD,eAAQkB,OARCE,W,0MCfhB,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,sGACgBC,IAAAA,IAAA,yBADhB,uBACEZ,EADF,EACEA,KADF,kBAEEA,EAAKa,SAFP,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACgBH,IAAAA,IAAA,gCAAmCG,IADnD,uBACEf,EADF,EACEA,KADF,kBAGEA,EAAKa,SAHP,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BR,GAA7B,yFACgBI,IAAAA,IAAA,mBAAsBJ,IADtC,uBACER,EADF,EACEA,KADF,kBAEEA,GAFF,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA4BmB,GAA5B,yFACgBL,IAAAA,IAAA,kBAAqBK,EAArB,aADhB,uBACEjB,EADF,EACEA,KADF,kBAGEA,GAHF,kEAMA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACgBL,IAAAA,IAAA,kBAAqBK,EAArB,aADhB,uBACEjB,EADF,EACEA,KADF,kBAGEA,GAHF,kEA5BPY,IAAAA,SAAAA,QAAAA,gBACE,kDACFA,IAAAA,SAAAA,QAAyB,6BAEzBA,IAAAA,SAAAA,OAAwB,CACtBO,QAAS","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  text-align: center;\n  margin: 0 auto;\n  padding: 5px;\n  border: 2px solid #f5f5f5;\n  background: white;\n  font-family: 'Open Sans';\n  transition: 0.3s ease-in;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  border-bottom: 2px solid #f5f5f5;\n`;\n\nexport const Image = styled.img`\n  margin-bottom: 10px;\n`;\n\nexport const Info = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  font-style: italic;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CreditsMovie } from '../../service/Api';\nimport { List, Item, Title, Image, Info } from './Cast.styled';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [errors, setError] = useState(false);\n\n  useEffect(() => {\n    CreditsMovie(movieId)\n      .then(data => {\n        if (!data.cast) return;\n        setMovies(data.cast);\n      })\n      .catch(() => setError(true));\n  }, [movieId]);\n\n  return (\n    <List>\n      {errors && <div>NOT FOUND</div>}\n      {movies.length === 0 && <h1>no info</h1>}\n      {movies.map(\n        ({ profile_path, character, name, id }) =>\n          !!profile_path && (\n            <Item key={id}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n              />\n              <Title>Name:</Title>\n              <Info>{name}</Info>\n              <Title> Character:</Title>\n              <Info> {character}</Info>\n            </Item>\n          )\n      )}\n    </List>\n  );\n};\n","import axios from 'axios';\n//import toast from 'react-hot-toast';\n\naxios.defaults.headers['Content-Type'] =\n  'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\naxios.defaults.params = {\n  api_key: '079f315d1c0a92bbce195275b13a313a',\n};\n\nexport async function TreandingMovies() {\n  const {data }= await axios.get(`/3/trending/movie/day`);\n  return data.results;\n}\nexport async function SearchMovie(query) {\n  const{ data }= await axios.get(`/3/search/movie?query=${query}`);\n\n  return data.results;\n}\nexport async function DetailsMovies(id) {\n  const {data }= await axios.get(`/3/movie/${id}`);\n  return data;\n}\n\nexport async function CreditsMovie(movie_id) {\n  const {data }= await axios.get(`3/movie/${movie_id}/credits`);\n\n  return data;\n}\n\nexport async function ReviewsMovie(movie_id) {\n  const {data }= await axios.get(`3/movie/${movie_id}/reviews`);\n\n  return data;\n}\n"],"names":["List","styled","Item","Title","Image","Info","Cast","movieId","useParams","useState","movies","setMovies","errors","setError","useEffect","CreditsMovie","then","data","cast","catch","length","map","profile_path","character","name","id","src","alt","TreandingMovies","axios","results","SearchMovie","query","DetailsMovies","movie_id","ReviewsMovie","api_key"],"sourceRoot":""}