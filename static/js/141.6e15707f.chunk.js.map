{"version":3,"file":"static/js/141.6e15707f.chunk.js","mappings":"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","sources":["service/getGenres.js","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/Pages.styled.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["const genres = {\n  28: {\n    en: 'Action',\n    uk: 'Бойовик',\n  },\n  12: {\n    en: 'Adventure',\n    uk: 'Пригоди',\n  },\n  16: {\n    en: 'Animation',\n    uk: 'Анімація',\n  },\n  35: {\n    en: 'Comedy',\n    uk: 'Комедія',\n  },\n  80: {\n    en: 'Crime',\n    uk: 'Кримінальний',\n  },\n  99: {\n    en: 'Documentary',\n    uk: 'Документальний',\n  },\n  18: {\n    en: 'Drama',\n    uk: 'Драма',\n  },\n  10751: {\n    en: 'Family',\n    uk: 'Сімейний',\n  },\n  14: {\n    en: 'Fantasy',\n    uk: 'Фентазі',\n  },\n  36: {\n    en: 'History',\n    uk: 'Історичний',\n  },\n  27: {\n    en: 'Horror',\n    uk: 'Жахи',\n  },\n  10402: {\n    en: 'Music',\n    uk: 'Мюзикл',\n  },\n  9648: {\n    en: 'Mystery',\n    uk: 'Містичний',\n  },\n  10749: {\n    en: 'Romance',\n    uk: 'Мелодрама',\n  },\n  878: {\n    en: 'Science Fiction',\n    uk: 'Наукова фантастика',\n  },\n  10770: {\n    en: 'TV Movie',\n    uk: 'ТВ фільм',\n  },\n  53: {\n    en: 'Thriller',\n    uk: 'Трилер',\n  },\n  10752: {\n    en: 'War',\n    uk: 'Воєнний',\n  },\n  37: {\n    en: 'Western',\n    uk: 'Вестерн',\n  },\n};\n\nexport const getGenres = list => {\n  if (!list) return '';\n  const language = window.location.hash.substring(1);\n  const g = [];\n\n  for (const re of list) {\n    if (g.length === 2) {\n      g.push('...');\n      break;\n    }\n\n    if (typeof re === 'object') {\n      g.push(re.name);\n      continue;\n    }\n\n    if (!genres[re]) continue;\n\n    g.push(genres[re][language]);\n  }\n\n  return g.map(g => `${g}`).join(', ');\n};","import { GrLinkPrevious} from \"react-icons/gr\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst BackLink = () => {\n    const location = useLocation();\n    \n    return <Link to={location?.state?.from ?? '/movies'}><GrLinkPrevious/></Link>\n}\nexport default BackLink;","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.div`\n  display: flex;\n     width: 1200;\n   margin: 0 auto;\n   padding:10px;\n   border: 2px solid #F5F5F5;\n   background: white;\n   font-family: \"Open Sans\";\n   transition: .3s ease-in;\n   box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 300px;\n  height: 100%;\n  margin-right: 30px;\n`;\n\n\nexport const ListWrapper = styled.div`\n   display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap:10px;\n  width:600px;\n`;\n\nexport const LinkOption= styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  :visited {\n    color: inherit;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { DetailsMovies } from '../../service/Api'\nimport { getGenres } from \"service/getGenres\";\nimport BackLink from \"components/BackLink/BackLink\";\nimport { Image, Section,ListWrapper } from \"./MovieDetails.styled\";\n\n\nconst MovieDetails = ({movieId}) => {\n    const [movie, setMovie] = useState([]);\n    const { title, poster_path, popularity, overview, genres } = movie;\n\n    useEffect(() => {\n        DetailsMovies(movieId).then(data => setMovie(data))\n    }, [movieId]);\n\n    return <> <BackLink />\n        <Section>\n        <Image src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\n            <ListWrapper>\n        <h1>{title}</h1>\n                <p>User score:</p>\n                <p> {Math.floor(popularity)}%</p>\n                <p>Overview: </p>\n                <p>{overview}</p>\n                <p>Ganres:</p>\n                <p> {getGenres(genres)}</p>\n            </ListWrapper>\n        </Section>\n    </>\n};\nexport default MovieDetails;","import styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\";\n\nexport const Links = styled(Link)`\nbackground: rgb(163,226,255);\nbackground: linear-gradient(90deg, rgba(163,226,255,0.8281687675070029) 36%, rgba(245,250,148,0.6152836134453781) 69%);\n  border: 2px solid #eee;\n  height: 22px;\n  width: 100px;\n  padding: 3px;\n  overflow: hidden;\n  display: block;\n  transition: All 0.5s ease;\n  border-radius:5px;\n  &:hover{\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.2);\n   background: rgb(43,188,255);\nbackground: linear-gradient(90deg, rgba(43,188,255,0.8281687675070029) 36%, rgba(246,232,84,0.6152836134453781) 69%);\n  }\n`\n\nexport const List = styled.ul`\ndisplay:flex;\n flex-direction: column;\n padding:  10px ;s\n gap:10px;`","import MovieDetails from \"components/MovieDetails\";\nimport { useParams, Outlet } from \"react-router-dom\";\nimport { Links, List } from \"./Pages.styled\";\n\n\n\n export const MovieDetailsPage = () => {\n    const {movieId}=useParams()\n    return <> <MovieDetails movieId={movieId} />\n        <List>\n            <li> <Links to='cast'>Cast</Links></li>\n            <li> <Links to='reviews'> Reviews</Links></li>\n        </List>    \n        <Outlet />\n    </>\n\n};\n"],"names":["genres","en","uk","getGenres","list","language","window","location","hash","substring","g","re","length","push","name","map","join","useLocation","to","state","from","Section","styled","Image","ListWrapper","Link","movieId","useState","movie","setMovie","title","poster_path","popularity","overview","useEffect","DetailsMovies","then","data","src","alt","Math","floor","Links","List","MovieDetailsPage","useParams"],"sourceRoot":""}