{"version":3,"file":"static/js/34.bcb87b53.chunk.js","mappings":"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","sources":["service/getGenres.js","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","pages/Pages.styled.jsx"],"sourcesContent":["const genres = {\n  28: {\n    en: 'Action',\n    uk: 'Бойовик',\n  },\n  12: {\n    en: 'Adventure',\n    uk: 'Пригоди',\n  },\n  16: {\n    en: 'Animation',\n    uk: 'Анімація',\n  },\n  35: {\n    en: 'Comedy',\n    uk: 'Комедія',\n  },\n  80: {\n    en: 'Crime',\n    uk: 'Кримінальний',\n  },\n  99: {\n    en: 'Documentary',\n    uk: 'Документальний',\n  },\n  18: {\n    en: 'Drama',\n    uk: 'Драма',\n  },\n  10751: {\n    en: 'Family',\n    uk: 'Сімейний',\n  },\n  14: {\n    en: 'Fantasy',\n    uk: 'Фентазі',\n  },\n  36: {\n    en: 'History',\n    uk: 'Історичний',\n  },\n  27: {\n    en: 'Horror',\n    uk: 'Жахи',\n  },\n  10402: {\n    en: 'Music',\n    uk: 'Мюзикл',\n  },\n  9648: {\n    en: 'Mystery',\n    uk: 'Містичний',\n  },\n  10749: {\n    en: 'Romance',\n    uk: 'Мелодрама',\n  },\n  878: {\n    en: 'Science Fiction',\n    uk: 'Наукова фантастика',\n  },\n  10770: {\n    en: 'TV Movie',\n    uk: 'ТВ фільм',\n  },\n  53: {\n    en: 'Thriller',\n    uk: 'Трилер',\n  },\n  10752: {\n    en: 'War',\n    uk: 'Воєнний',\n  },\n  37: {\n    en: 'Western',\n    uk: 'Вестерн',\n  },\n};\n\nexport const getGenres = list => {\n  if (!list) return '';\n  const language = window.location.hash.substring(1);\n  const g = [];\n\n  for (const re of list) {\n    if (g.length === 2) {\n      g.push('...');\n      break;\n    }\n\n    if (typeof re === 'object') {\n      g.push(re.name);\n      continue;\n    }\n\n    if (!genres[re]) continue;\n\n    g.push(genres[re][language]);\n  }\n\n  return g.map(g => `${g}`).join(', ');\n};\n","import { GrLinkPrevious } from 'react-icons/gr';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const BackLink = () => {\n  const location = useLocation();\n  return (\n    <Link to={location?.state?.from ?? '/movies'}>\n      <GrLinkPrevious />\n    </Link>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  display: flex;\n  width: 1200;\n  margin: 0 auto;\n  padding: 10px;\n  border: 2px solid #f5f5f5;\n  background: white;\n  font-family: 'Open Sans';\n  transition: 0.3s ease-in;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 300px;\n  height: 100%;\n  margin-right: 30px;\n`;\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  width: 600px;\n`;\n\nexport const TitleOption = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  border-bottom: 2px solid #f5f5f5;\n`;\n\nexport const TextOption = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  font-style: italic;\n`;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DetailsMovies } from '../../service/Api';\nimport { getGenres } from 'service/getGenres';\nimport { BackLink } from 'components/BackLink';\nimport {\n  Image,\n  Section,\n  ListWrapper,\n  TitleOption,\n  TextOption,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = ({ movieId }) => {\n  const [movie, setMovie] = useState([]);\n  const { title, poster_path, popularity, overview, genres } = movie;\n\n  useEffect(() => {\n    DetailsMovies(movieId).then(data => setMovie(data));\n  }, [movieId]);\n\n  return (\n    <>\n      {' '}\n      <BackLink />\n      <Section>\n        <Image\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <ListWrapper>\n          <h1>{title}</h1>\n          <TitleOption>User score:</TitleOption>\n          <TextOption> {Math.floor(popularity)}%</TextOption>\n          <TitleOption>Overview: </TitleOption>\n          <TextOption>{overview}</TextOption>\n          <TitleOption>Ganres:</TitleOption>\n          <TextOption> {getGenres(genres)}</TextOption>\n        </ListWrapper>\n      </Section>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string,\n};\n","import { MovieDetails } from 'components/MovieDetails';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { Links, List } from './Pages.styled';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  return (\n    <>\n      <MovieDetails movieId={movieId} />\n      <List>\n        <li>\n          <Links to=\"cast\">Cast</Links>\n        </li>\n        <li>\n          <Links to=\"reviews\"> Reviews</Links>\n        </li>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  background: rgb(163, 226, 255);\n  background: linear-gradient(\n    90deg,\n    rgba(163, 226, 255, 0.8281687675070029) 36%,\n    rgba(245, 250, 148, 0.6152836134453781) 69%\n  );\n  border: 2px solid #eee;\n  height: 22px;\n  width: 100px;\n  padding: 3px;\n  overflow: hidden;\n  display: block;\n  transition: All 0.5s ease;\n  border-radius: 5px;\n  &:hover {\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.2);\n    background: rgb(43, 188, 255);\n    background: linear-gradient(\n      90deg,\n      rgba(43, 188, 255, 0.8281687675070029) 36%,\n      rgba(246, 232, 84, 0.6152836134453781) 69%\n    );\n  }\n`;\n\nexport const List = styled.ul`\ndisplay:flex;\n flex-direction: column;\n padding:  10px ;s\n gap:10px;`;\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const Btn = styled.button`\nmargin-left:10px;\nfont-size:16px;\npadding:3px;`\n\nexport const Input = styled.input`\n  height: 28px;\n`\n"],"names":["genres","en","uk","getGenres","list","language","window","location","hash","substring","g","re","length","push","name","map","join","BackLink","useLocation","to","state","from","Section","styled","Image","ListWrapper","TitleOption","TextOption","MovieDetails","movieId","useState","movie","setMovie","title","poster_path","popularity","overview","useEffect","DetailsMovies","then","data","src","alt","Math","floor","MovieDetailsPage","useParams","Links","Link","List","Form","Btn","Input"],"sourceRoot":""}